DROP SEQUENCE USER_SEQ;

CREATE SEQUENCE USER_SEQ NOCACHE;

DROP TABLE INACTIVE_USER_T;
DROP TABLE LEAVE_USER_T;
DROP TABLE ACCESS_T;
DROP TABLE USER_T;

CREATE TABLE USER_T(
    USER_NO         NUMBER              NOT NULL,
    EMAIL           VARCHAR2(100 BYTE)  NOT NULL    UNIQUE,
    PW              VARCHAR2(64 BYTE)   NOT NULL,
    NAME            VARCHAR2(50 BYTE),
    GENDER          VARCHAR2(2  BYTE),
    MOBILE          VARCHAR2(15 BYTE),
    POSTCODE        VARCHAR2(5  BYTE),
    ROAD_ADDRESS    VARCHAR2(100 BYTE),
    JIBUN_ADDRESS   VARCHAR2(100 BYTE),
    DETAIL_ADDRESS  VARCHAR2(100 BYTE),
    AGREE           NUMBER              NOT NULL,
    PW_MODIFIED_AT  DATE,
    JOINED_AT       DATE,
    CONSTRAINT USER_PK PRIMARY KEY(USER_NO)
);

CREATE TABLE ACCESS_T(
    EMAIL           VARCHAR2(100 BYTE)  NOT NULL,
    LOGIN_AT        DATE,
    CONSTRAINT USER_ACCESS_FK FOREIGN KEY(EMAIL) REFERENCES USER_T(EMAIL) ON DELETE CASCADE
);

CREATE TABLE LEAVE_USER_T(
    EMAIL           VARCHAR2(50 BYTE)   NOT NULL    UNIQUE,
    JOINED_AT       DATE,
    LEAVED_AT       DATE
);

CREATE TABLE INACTIVE_USER_T(
    USER_NO         NUMBER              NOT NULL,
    EMAIL           VARCHAR2(100 BYTE)  NOT NULL    UNIQUE,
    PW              VARCHAR2(64 BYTE)   NOT NULL,
    NAME            VARCHAR2(50 BYTE),
    GENDER          VARCHAR2(2  BYTE),
    MOBILE          VARCHAR2(15 BYTE),
    POSTCODE        VARCHAR2(5  BYTE),
    ROAD_ADDRESS    VARCHAR2(100 BYTE),
    JIBUN_ADDRESS   VARCHAR2(100 BYTE),
    DETAIL_ADDRESS  VARCHAR2(100 BYTE),
    AGREE           NUMBER              NOT NULL,
    PW_MODIFIED_AT  DATE,
    JOINED_AT       DATE,
    INACTIVED_AT    DATE,
    CONSTRAINT INACTIVE_USER_PK PRIMARY KEY(USER_NO)
);

INSERT INTO USER_T VALUES(USER_SEQ.NEXTVAL, 'user1@naver.com', STANDARD_HASH('1111', 'SHA256'), '사용자1', 'M', '01011111111', '11111', '디지털로', '가산동', '101동 101호', 0, TO_DATE('20231001', 'YYYYMMDD'), TO_DATE('20220101', 'YYYYMMDD'));
INSERT INTO USER_T VALUES(USER_SEQ.NEXTVAL, 'user2@naver.com', STANDARD_HASH('2222', 'SHA256'), '사용자2', 'F', '01022222222', '22222', '디지털로', '가산동', '202동 202호', 1, TO_DATE('20230802', 'YYYYMMDD'), TO_DATE('20220102', 'YYYYMMDD'));
INSERT INTO USER_T VALUES(USER_SEQ.NEXTVAL, 'user3@naver.com', STANDARD_HASH('3333', 'SHA256'), '사용자3', 'NO', '01033333333', '33333', '디지털로', '가산동', '303동 303호', 0, TO_DATE('20230603', 'YYYYMMDD'), TO_DATE('20220103', 'YYYYMMDD'));

INSERT INTO ACCESS_T VALUES('user1@naver.com', TO_DATE('20231018','YYYYMMDD'));
INSERT INTO ACCESS_T VALUES('user2@naver.com', TO_DATE('20220201','YYYYMMDD'));

COMMIT;



-- 1. 로그인 할 때 (이메일, 비밀번호 입력)
SELECT USER_NO, EMAIL, PW, NAME, GENDER, MOBILE, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, AGREE, PW_MODIFIED_AT, JOINED_AT
  FROM USER_T
 WHERE EMAIL = 'user1@naver.com'
   AND PW = '0FFE1ABD1A08215353C233D6E009613E95EEC4253832A761AF28FF37AC5A150C';

INSERT INTO ACCESS_T VALUES('user1@naver.com', SYSDATE);
COMMIT;

SELECT USER_NO, EMAIL, PW, NAME, GENDER, MOBILE, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, AGREE, PW_MODIFIED_AT, JOINED_AT
  FROM INACTIVE_USER_T
 WHERE EMAIL = 'user1@naver.com'
   AND PW = '0FFE1ABD1A08215353C233D6E009613E95EEC4253832A761AF28FF37AC5A150C';



-- 2. 이메일 중복 체크
SELECT EMAIL
  FROM USER_T
 WHERE EMAIL = 'user4@naver.com';
SELECT EMAIL
  FROM LEAVE_USER_T
 WHERE EMAIL = 'user4@naver.com';
SELECT EMAIL
  FROM INACTIVE_USER_T
 WHERE EMAIL = 'user4@naver.com';



-- 3. 휴면 처리 할 때(12개월 이상 로그인 이력이 없다. 가입일이 12개월 이상 지나고 로그인 이력이 없다.)
INSERT INTO INACTIVE_USER_T 
(
SELECT USER_NO, U.EMAIL, PW, NAME, GENDER, MOBILE, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, AGREE, PW_MODIFIED_AT, JOINED_AT, SYSDATE
  FROM USER_T U LEFT OUTER JOIN ACCESS_T A
    ON U.EMAIL = A.EMAIL
 WHERE MONTHS_BETWEEN(SYSDATE, LOGIN_AT) >= 12
    OR (LOGIN_AT IS NULL AND MONTHS_BETWEEN(SYSDATE, JOINED_AT) >= 12)
);
DELETE 
  FROM USER_T
 WHERE EMAIL IN(SELECT U.EMAIL
                  FROM USER_T U LEFT OUTER JOIN ACCESS_T A
                    ON U.EMAIL = A.EMAIL
                 WHERE MONTHS_BETWEEN(SYSDATE, LOGIN_AT) >= 12
                    OR (LOGIN_AT IS NULL AND MONTHS_BETWEEN(SYSDATE, JOINED_AT) >= 12));

COMMIT;
-- 4. 휴면 복원할 때 로그인 -> USER_T에 추가 -> INACTIVE_USER_T에서 삭제 -> ACCESS_T 추가

INSERT INTO USER_T 
(
SELECT USER_NO, EMAIL, PW, NAME, GENDER, MOBILE, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, AGREE, PW_MODIFIED_AT, JOINED_AT
  FROM INACTIVE_USER_T
 WHERE EMAIL = 'user2@naver.com'
);

DELETE 
  FROM INACTIVE_USER_T
 WHERE EMAIL = 'user2@naver.com';
 
SELECT USER_NO, EMAIL, PW, NAME, GENDER, MOBILE, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, AGREE, PW_MODIFIED_AT, JOINED_AT
  FROM USER_T
 WHERE EMAIL = 'user2@naver.com'; 

INSERT INTO ACCESS_T VALUES('user2@naver.com', SYSDATE);
COMMIT;

-- 5. 탈퇴할 때
INSERT INTO LEAVE_USER_T VALUES('user1@naver.com', TO_DATE('20220101', 'YYYYMMDD'), SYSDATE);
DELETE FROM USER_T
 WHERE USER_NO = 1;
COMMIT; 